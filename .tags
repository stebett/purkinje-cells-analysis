!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/export/home1/users/nbc/bettani/ens/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/d532b5c4/
Sₙ	_research/information.jl	/^Sₙ(x) = -sum(pₙ(x) .* log2.(pₙ(x)))$/;"	f
bin	src/section.jl	/^function bin(x::Array{<:Real, 1}, len::Int, binsize::Real=1.)$/;"	f
bin	src/section.jl	/^function bin(x::Array{Array{<:Real, 1}, 1}, len::Int, binsize::Real=1.)::Array{Array{<:Real,1 },/;"	f
convolve	src/section.jl	/^function convolve(x::Array{<:Real, 1}, σ::Real=10)::Array{<:Real, 1}$/;"	f
convolve	src/section.jl	/^function convolve(x::Array{Array{<:Real, 1}, 1}, σ::Real=10)::Array{Array{<:Real, 1}, 1}$/;"	f
correlate	scripts/corr-coef.jl	/^function correlate(convolutions)$/;"	f
crosscor	src/plot/cross-correlation.jl	/^function crosscor(df, idx1::Int, idx2::Int; thr=1., binsize=0.5, lags=[-40:40;], around=[-200, 2/;"	f
crosscor_3B	src/plot/cross-correlation.jl	/^function crosscor_3B(df, idx1, idx2; thr=1.5, binsize=0.5, around=[-200, 200], dir="")$/;"	f
crosscor_custom	src/plot/cross-correlation.jl	/^@inline function crosscor_custom(c1::Vector, c2::Vector, lags=[-40:40;])$/;"	f
cut	src/section.jl	/^function cut(x::Array{<:Real, 1}, y::Array{<:Real, 1}, z::Array{<:Real, 1})::Array{Array{<:Real,/;"	f
cut	src/section.jl	/^function cut(x::Array{<:Real, 1}, y::Real, z::Array{<:Real, 1})::Array{<:Real, 1}$/;"	f
cut	src/section.jl	/^function cut(x::Array{Array{<:Real, 1}, 1}, y::Array{Array{<:Real, 1}, 1}, z::Array{<:Real, 1}):/;"	f
distant_correlation	scripts/corr-coef.jl	/^function distant_correlation(correlations, dist_list, neuron_list)$/;"	f
drop	src/drop.jl	/^function drop(v::Matrix; dims=1, nan=true, inf=true, outliers=false, threshold=3.5)$/;"	f
drop	src/drop.jl	/^function drop(v::Vector; nan=true, inf=true, outliers=false, threshold=3.5)$/;"	f
drop	src/drop.jl	/^function drop(v::Vector{<:Vector}; nan=true, inf=true)$/;"	f
ens	src/ens.jl	/^module ens$/;"	n
extract_index	scripts/io/fix-full-data-index.jl	/^function extract_index(df::DataFrame, path::String, name::String)::Int$/;"	f
extract_index	scripts/io/load-full.jl	/^function extract_index(df::DataFrame, path::String, name::String)::Int$/;"	f
extract_trials	scripts/io/save-trials.jl	/^function extract_trials(groups::GroupedDataFrame{DataFrame}, min_length)$/;"	f
extract_trials	scripts/io/save-trials.jl	/^function extract_trials(neigh, min_length, around=[-1000, 1000])$/;"	f
extract_trials	scripts/plot-gpfa.jl	/^function extract_trials(groups::GroupedDataFrame{DataFrame}, min_length)$/;"	f
filterData	_research/experimental.jl	/^function filterData(df; rat="all", site="all", groupby="none", index="all", spec="none")$/;"	f
filterLandmarks	_research/experimental.jl	/^function filterLandmarks(df, index)$/;"	f
find_broken_landmarks	scripts/io/fix-landmarks.jl	/^function find_broken_landmarks(data)$/;"	f
fit_fourths	scripts/pca/speed.jl	/^function fit_fourths(st)$/;"	f
fit_halfes	scripts/pca/speed.jl	/^function fit_halfes(st)$/;"	f
fit_thirds	scripts/pca/speed.jl	/^function fit_thirds(st)$/;"	f
get_aligned_trial	_research/alligned-trials.jl	/^@inline function get_aligned_trial(df, n, i)$/;"	f
get_distant	scripts/cross-correlogram.jl	/^function get_distant(df::DataFrame)$/;"	f
get_distant	src/data-tools.jl	/^function get_distant(df::DataFrame)$/;"	f
get_neighbors	src/data-tools.jl	/^function get_neighbors(df::DataFrame)$/;"	f
get_pairs	src/data-tools.jl	/^function get_pairs(df::DataFrame, kind::String)$/;"	f
get_trial	_research/single-trials.jl	/^@inline function get_trial(df, n, i, after)$/;"	f
get_trial	_research/single-trials.jl	/^function get_trial(df, n)$/;"	f
get_trial	_research/single-trials.jl	/^function get_trial(df, n, after)$/;"	f
interval	_research/landmarks-info.jl	/^function interval(data, l1, l2)$/;"	f
jpsth	_research/jpsth.jl	/^function jpsth(idx1, idx2)$/;"	f
load_full	scripts/io/load-full.jl	/^function load_full()$/;"	f
mass_crosscor	src/plot/cross-correlation.jl	/^function mass_crosscor(df, couples; thr=1.5, binsize=0.5, lags=[-40:40;], around=[-200, 200], fi/;"	f
neighbor_correlation	scripts/corr-coef.jl	/^function neighbor_correlation(correlations, neigh_list)$/;"	f
nodouble	scripts/io/load-full.jl	/^function nodouble(x)$/;"	f
norm_slice	src/spike-tools.jl	/^function norm_slice(target::T, baseline::T)::T where {T <: Array{Float64,1}}$/;"	f
norm_slice	src/spike-tools.jl	/^function norm_slice(target::T, baseline::T)::T where {T <: Array{Float64,2}}$/;"	f
normalize	src/section.jl	/^function normalize(x::Array{<:Real, 1}, y::Array{<:Real, 1})::Array{<:Real, 1}$/;"	f
normalize	src/section.jl	/^function normalize(x::Array{Array{<:Real, 1}, 1}, y::Array{Array{<:Real, 1}, })::Array{Array{<:R/;"	f
padder	scripts/io/save-trials.jl	/^function padder(n, trials)$/;"	f
plot_gpfa	scripts/plot-gpfa.jl	/^function plot_gpfa(traj, stop=900, title="")$/;"	f
plot_gpfa_slow_vs_fast	scripts/plot-gpfa.jl	/^function plot_gpfa_slow_vs_fast(traj, idx_slow, idx_fast, stop=900)$/;"	f
plot_gpfa_speed	scripts/plot-gpfa.jl	/^function plot_gpfa_speed(traj, speeds, stop=500, color=:inferno)$/;"	f
psth	src/plot/psth.jl	/^function psth(n::Array{Array{Float64, 1}}, low::T=-0.7, high::T=1.6) where {T<:Number}$/;"	f
psth	src/plot/psth.jl	/^function psth(n::Array{Float64, 2}, low::T=-0.7, high::T=1.6, ct::String="") where {T<:Number}$/;"	f
pₙ	_research/information.jl	/^function pₙ(x)$/;"	f
save_trials	scripts/io/save-trials.jl	/^function save_trials(trials)$/;"	f
savefig	src/io-tools.jl	/^function savefig(fn::AbstractString, source::AbstractString)$/;"	f
scatter_dynamics	scripts/pca/pca.jl	/^function scatter_dynamics(around, title)$/;"	f
search_routes	scripts/io/load-full.jl	/^function search_routes(x, l, saved_list::Vector)$/;"	f
section	src/section.jl	/^function section(x, y, z, args...; σ=10, over=[-500, 500], binsize=1.)$/;"	f
sectionTrial	src/section-trial.jl	/^function sectionTrial(df::DataFrame, n::Int=4, k::Int=4)$/;"	f
sectionTrial	src/section-trial.jl	/^function sectionTrial(x::Array{T, 1}, lift::T, cover::T, grasp::T, n::Int, k::Int) where {T <: F/;"	f
sectionTrial	src/section-trial.jl	/^function sectionTrial(x::T, lift::T, cover::T, grasp::T, n::Int, k::Int) where {T <: Array{Array/;"	f
sectionTrial	src/section-trial.jl	/^function sectionTrial(x::T, lift::T, cover::T, grasp::T, n::Int, k::Int) where {T <: Array{Float/;"	f
sem	scripts/cross-correlogram.jl	/^function sem(x::Matrix; dims=2)$/;"	f
single_trials	_research/experimental.jl	/^function single_trials(df, landmark::String)$/;"	f
single_trials	scripts/io/save-trials.jl	/^function single_trials(df, landmark::String)$/;"	f
single_trials	scripts/plot-gpfa.jl	/^function single_trials(df, landmark::String)$/;"	f
slice	src/spike-tools.jl	/^function slice(spiketrains, landmarks; around=[-50, 50], convolution=false, σ=10, average=false/;"	f
slice_	src/spike-tools.jl	/^function slice_(spiketrain::Array{Float64,1}, landmark::Number, around::AbstractVector, binsize=/;"	f
slice_	src/spike-tools.jl	/^function slice_(spiketrain::Array{Float64,1}, landmarks::Array{Float64,1}, around::AbstractVecto/;"	f
slice_	src/spike-tools.jl	/^function slice_(spiketrains::Array{Array{Float64,1}, 1}, landmarks::Array{Float64,1}, around::Ab/;"	f
slice_	src/spike-tools.jl	/^function slice_(spiketrains::Array{Array{Float64,1}}, landmarks::Array{Array{Float64,1}}, around/;"	f
sort_active	scripts/pca/speed-pca.jl	/^function sort_active(n, thr=0.5)$/;"	f
sort_active	src/plot/psth.jl	/^function sort_active(n, center)$/;"	f
sort_peaks	src/plot/psth.jl	/^function sort_peaks(n)$/;"	f
standardize_landmarks	_research/experimental.jl	/^function standardize_landmarks(landmarks::Array{Array{Float64,1},1})::Array{Float64, 2}$/;"	f
test_discretize	test/tests-psth.jl	/^function test_discretize()$/;"	f
test_fractions	test/bin-test.jl	/^function test_fractions(a, i)$/;"	f
test_int	test/bin-test.jl	/^function test_int(a, i)$/;"	f
test_norm_slice	test/tests-psth.jl	/^function test_norm_slice()$/;"	f
test_slice	test/tests-psth.jl	/^function test_slice()$/;"	f
test_sum	test/bin-test.jl	/^function test_sum(a, i)$/;"	f
