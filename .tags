!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/ginko/ens/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/e52cf4a7/
Base.parse	src/parse.jl	/^function Base.parse(::Type{T}, c::String; n::Int=2) where T<:Array{Int, 1}$/;"	f
Base.parse	src/parse.jl	/^function Base.parse(::Type{T}, c::String; n::Int=2) where T<:Tuple{Int, Int}$/;"	f
Base.vec	scripts/spline/modular/simulate-one.jl	/^function Base.vec(x::Float64)$/;"	f
Base.vec	scripts/spline/modular/simulate.jl	/^function Base.vec(x::Float64)$/;"	f
GLM.predict	_research/glm/glm.jl	/^GLM.predict(linreg, df[df.trial .== 1, :]) |> plot$/;"	f
GLM.predict	_research/random/glm.jl	/^GLM.predict(linreg, df[df.trial .== 1, :]) |> plot$/;"	f
PSTH	src/psth.jl	/^struct PSTH $/;"	s
SplinePlots	src/spline/plots.jl	/^module SplinePlots$/;"	n
apply_all	notebooks/information-2.jl	/^function apply_all(data, group, fun, around, landmark)$/;"	f
apply_all	notebooks/information-2.jl	/^function apply_all(data, group, fun, around::Vector{<:Real})$/;"	f
apply_all	notebooks/information-2.jl	/^function apply_all(data, group, fun, around::Vector{<:Vector})$/;"	f
apply_sliding	notebooks/information-2.jl	/^function apply_sliding(data, group, $/;"	f
around	src/psth.jl	/^	around::Vector$/;"	g	struct:PSTH
average	src/average.jl	/^function average(x::Vector, df::DataFrame)$/;"	f
average	src/average.jl	/^function average(x::Vector, y::Vector{<:Vector{<:Real}})$/;"	f
average	test/average-test.jl	/^@test @inferred average(x, y) == fill(2, 20)$/;"	f
average	test/average-test.jl	/^@test average(x, y) == fill(2, 20)$/;"	f
bernoulli_reg	_research/turing/pois-reg.jl	/^@model bernoulli_reg(x, y, n, σ²) = begin$/;"	f
best_model	src/spline/model_summaries.jl	/^function best_model(df, ll)$/;"	f
binomial_reg	_research/turing/binomial.jl	/^@model binomial_reg(x, y, n, σ²) = begin$/;"	f
compute	src/psth.jl	/^function compute(A::PSTH, data)$/;"	f
convolution	src/psth.jl	/^	convolution::Bool$/;"	g	struct:PSTH
convolve	notebooks/manuscript.jl	/^convolve([0, 1, 0, 0, 1]) |> plot$/;"	f
correlate	scripts/correlations/old.jl	/^function correlate(convolutions)$/;"	f
correlations	notebooks/manuscript.jl	/^function correlations(data, l, g)$/;"	f
correlations	scripts/correlations/new.jl	/^function correlations(data, l, g)$/;"	f
cost	_research/random/information.jl	/^function cost(df, around, binsize)$/;"	f
cost	notebooks/information.jl	/^function cost(df, around, binsize)$/;"	f
couple	src/couple.jl	/^function couple(df::DataFrame, kind::Symbol)$/;"	f
couple_sign	_research/glm/glm.jl	/^function couple_sign(data, idx)$/;"	f
couple_sign	_research/random/glm.jl	/^function couple_sign(data, idx)$/;"	f
couple_sign	_research/random/multivariate-functions.jl	/^function couple_sign(data, idx)$/;"	f
crosscor_c	src/crosscor.jl	/^@inline function crosscor_c(df, c, active_c::Dict, binsize, norm=true) $/;"	f
crosscor_c	src/crosscor.jl	/^@inline function crosscor_c(df, c, around::Vector, binsize, norm=true) $/;"	f
cticks	_research/glm/mkdf-plots.jl	/^cticks(ctg::CategoricalArray) = (1:length(levels(ctg)), levels(ctg));$/;"	f
deviation	scripts/speed/linreg.jl	/^function deviation(x::Vector, y::Vector{<:Vector{<:Real}})$/;"	f
deviation	test/average-test.jl	/^@test @inferred deviation(x, y) == fill(std([0, 1, 2, 3, 4]), 20)$/;"	f
deviation	test/average-test.jl	/^@test deviation(x, y) == fill(std([0, 1, 2, 3, 4]), 20)$/;"	f
dirs	scripts/spline/modular/preprocess.jl	/^function dirs(path, indexes)$/;"	f
distant_correlation	scripts/correlations/old.jl	/^function distant_correlation(correlations, dist_list, neuron_list)$/;"	f
ens	src/ens.jl	/^module ens$/;"	n
ens.average	notebooks/manuscript.jl	/^function ens.average(x::Vector, y::Vector{<:Vector{<:Real}})$/;"	f
equalize_landmarks	scripts/io/v1-v6.jl	/^function equalize_landmarks(df, idx) #TODO don't think it works if lift is smaller$/;"	f
extract	scripts/spline/modular/simulate-one.jl	/^function extract(fake)$/;"	f
extract	scripts/spline/modular/simulate.jl	/^function extract(fake)$/;"	f
extract_index	scripts/io/fix-full-data-index.jl	/^function extract_index(df::DataFrame, path::String, name::String)::Int$/;"	f
extract_index	scripts/io/load-full.jl	/^function extract_index(df::DataFrame, path::String, name::String)::Int$/;"	f
extract_trials	_research/old/plot-gpfa.jl	/^function extract_trials(groups::GroupedDataFrame{DataFrame}, min_length)$/;"	f
extract_trials	scripts/io/save-trials.jl	/^function extract_trials(groups::GroupedDataFrame{DataFrame}, min_length)$/;"	f
extract_trials	scripts/io/save-trials.jl	/^function extract_trials(neigh, min_length, around=[-1000, 1000])$/;"	f
f	_research/turing/pois-reg.jl	/^f(η) = 1 \/ (1 + exp(-η))$/;"	f
fast_predict	_research/turing/pois-reg.jl	/^function fast_predict(data, idx)$/;"	f
figure_5	src/spline/plots.jl	/^function figure_5(df_n, df_d, ll_n, ll_d)$/;"	f
figure_A	scripts/crosscorr/a.jl	/^function figure_A(b, r, title; kwargs...)$/;"	f
figure_A	scripts/presentation.jl	/^function figure_A(b, r, title; kwargs...)$/;"	f
figure_B	scripts/crosscorr/b.jl	/^function figure_B(modulated, unmodulated; kwargs...)$/;"	f
figure_B	scripts/presentation.jl	/^function figure_B(modulated, unmodulated; kwargs...)$/;"	f
figure_C	scripts/crosscorr/c-d-clement.jl	/^function figure_C(neighbors::Matrix; kwargs...)$/;"	f
figure_D	scripts/crosscorr/c-d-clement.jl	/^function figure_D(distant::Matrix; kwargs...)$/;"	f
figure_E	scripts/crosscorr/e.jl	/^function figure_E(x, xs, y; kwargs...)$/;"	f
figure_F	scripts/crosscorr/f-g.jl	/^function figure_F(folded_sim_mean, folded_sim_sem; kwargs...)$/;"	f
figure_G	scripts/crosscorr/f-g.jl	/^function figure_G(folded_diff_mean, folded_diff_sem; kwargs...)$/;"	f
filterData	_research/old/experimental.jl	/^function filterData(df; rat="all", site="all", groupby="none", index="all", spec="none")$/;"	f
filterLandmarks	_research/old/experimental.jl	/^function filterLandmarks(df, index)$/;"	f
filter_by_length	scripts/crosscorr/c-d-clement.jl	/^function filter_by_length(x::Vector{<:Tuple}, minlen::Int)$/;"	f
find	src/find.jl	/^function find(df::DataFrame, index::Real, column=Colon())$/;"	f
find	src/find.jl	/^function find(df::DataFrame, index::Vector, column=Colon())$/;"	f
find_broken_landmarks	scripts/io/fix-landmarks.jl	/^function find_broken_landmarks(data)$/;"	f
find_broken_landmarks	scripts/io/v1-v6.jl	/^function find_broken_landmarks(data)$/;"	f
fit_fourths	scripts/pca/speed.jl	/^function fit_fourths(st)$/;"	f
fit_halfes	scripts/pca/speed.jl	/^function fit_halfes(st)$/;"	f
fit_thirds	scripts/pca/speed.jl	/^function fit_thirds(st)$/;"	f
fitcell	src/spline/fit.jl	/^function fitcell(cell::DataFrameRow; reference)$/;"	f
fitcell	src/spline/fit.jl	/^function fitcell(cellpair::DataFrame; reference)$/;"	f
fitcell_log_save	scripts/spline/local/produce.jl	/^function fitcell_log_save(x, fn, reference) $/;"	f
flatten_dict	scripts/spline/modular/preprocess.jl	/^flatten_dict(d::Dict) = Dict(Symbol(k)=>v for (_, subdict) in d for (k, v) in subdict)$/;"	f
get_active_couples	scripts/crosscorr/c-d-clement.jl	/^function get_active_couples(couples, ranges)$/;"	f
get_active_couples	scripts/crosscorr/c-d.jl	/^function get_active_couples(couples, ranges)$/;"	f
get_active_spikes	scripts/presentation.jl	/^function get_active_spikes(df, active_bins, ranges)$/;"	f
get_all_spikes	scripts/presentation.jl	/^function get_all_spikes(df,ranges)$/;"	f
get_bins	notebooks/information-2.jl	/^function get_bins(data, group, around)$/;"	f
get_bins	notebooks/information-2.jl	/^function get_bins(data, group, around, landmark)$/;"	f
get_distant	src/couple.jl	/^function get_distant(df::DataFrame)$/;"	f
get_neighbors	src/couple.jl	/^function get_neighbors(df::DataFrame)$/;"	f
get_p	_research/random/information.jl	/^function get_p(df, landmark, around, binsize)$/;"	f
get_p	notebooks/information.jl	/^function get_p(df, landmark, around, binsize)$/;"	f
get_peaks	src/spline/model_summaries.jl	/^function get_peaks(df, ref, group)$/;"	f
halffit	src/spline/fit.jl	/^function halffit(cellpair; reference)$/;"	f
high	src/psth.jl	/^	high::Real$/;"	g	struct:PSTH
jpsth	_research/old/jpsth.jl	/^function jpsth(idx1, idx2)$/;"	f
landmark	src/psth.jl	/^	landmark::Symbol$/;"	g	struct:PSTH
likelihood_analysis	scripts/spline/local/produce.jl	/^function likelihood_analysis(p)$/;"	f
likelihoodtest	_research/random/multivariate-functions.jl	/^function likelihoodtest(data, idx)$/;"	f
load	src/psth.jl	/^function load(A::PSTH)$/;"	f
load_data	src/load-data.jl	/^function load_data(analysis, batch, reference, group, file)$/;"	f
load_data	src/load-data.jl	/^function load_data(filename::String)$/;"	f
load_data	src/load-data.jl	/^load_data(::Val{:last}) = load_data("data-v6.arrow")$/;"	f
load_data	src/load-data.jl	/^load_data(shortcut::Symbol) = load_data(Val(shortcut))$/;"	f
load_full	scripts/io/load-full.jl	/^function load_full()$/;"	f
low	src/psth.jl	/^	low::Real$/;"	g	struct:PSTH
main	scripts/spline/local/produce.jl	/^function main(p)$/;"	f
merge_ranges	scripts/crosscorr/c-d-clement.jl	/^function merge_ranges(x::Vector{<:Tuple})$/;"	f
minmax_scale	src/minmax.jl	/^function minmax_scale(x::Vector)$/;"	f
mkdf	src/spline/mkdf.jl	/^function mkdf(cell::DataFrameRow; reference="", tmax=[-600., 600.], pad=350., landmark=:lift, mi/;"	f
mkdf	src/spline/mkdf.jl	/^function mkdf(cellpair::DataFrame; reference="", tmax=[-600., 600.], pad=350., landmark=:lift, m/;"	f
mkdirs	scripts/spline/modular/pipeline.jl	/^function mkdirs(batchpath, pipeline, respath)$/;"	f
nbdir	src/ens.jl	/^nbdir(args...) = projectdir("notebooks", args...)$/;"	f
neighbor_correlation	scripts/correlations/old.jl	/^function neighbor_correlation(correlations, neigh_list)$/;"	f
nodouble	scripts/io/load-full.jl	/^function nodouble(x)$/;"	f
over	src/psth.jl	/^	over::Vector$/;"	g	struct:PSTH
padder	scripts/io/save-trials.jl	/^function padder(n, trials)$/;"	f
plot_crosscor_distant	scripts/crosscorr/c-d.jl	/^function plot_crosscor_distant(distant::Matrix)$/;"	f
plot_crosscor_neigh	scripts/crosscorr/c-d.jl	/^function plot_crosscor_neigh(neighbors::Matrix)$/;"	f
plot_gpfa	_research/old/plot-gpfa.jl	/^function plot_gpfa(traj, stop=900, title="")$/;"	f
plot_gpfa_slow_vs_fast	_research/old/plot-gpfa.jl	/^function plot_gpfa_slow_vs_fast(traj, idx_slow, idx_fast, stop=900)$/;"	f
plot_gpfa_speed	_research/old/plot-gpfa.jl	/^function plot_gpfa_speed(traj, speeds, stop=500, color=:inferno)$/;"	f
plot_trials	scripts/psth/trials.jl	/^function plot_trials(t, l, ln)$/;"	f
plot_trials	scripts/spline/modular/plot-summary.jl	/^function plot_trials(t, l)$/;"	f
plots_details	scripts/spline/modular/plot-figure-5.jl	/^function plots_details(p, peaks)$/;"	f
prediction	_research/turing/binomial.jl	/^function prediction(x::Vector, chain)$/;"	f
prediction	_research/turing/pois-reg.jl	/^function prediction(x::Vector, chain)$/;"	f
preprocess	scripts/spline/common/preprocess.jl	/^function preprocess(data, p; path)$/;"	f
preprocess	scripts/spline/likelihood/preprocess.jl	/^function preprocess(data, p; path)$/;"	f
preprocess	scripts/spline/modular/preprocess.jl	/^function preprocess(alldata; index, reference, group, path, tmax, pad, minspikes, alpha)$/;"	f
pretty	scripts/spline/common/preprocess.jl	/^function pretty(p::Dict)$/;"	f
pretty	scripts/spline/likelihood/preprocess.jl	/^function pretty(p::Dict, n::Int)$/;"	f
process	scripts/spline/modular/plot-figure-4.jl	/^function process(c1, c2, c1_c, c1_s, cc_params)$/;"	f
produce_only_configs	scripts/spline/likelihood/preprocess.jl	/^function produce_only_configs(p, ;path)$/;"	f
psth	notebooks/manuscript.jl	/^function psth(landmark)$/;"	f
rangeT	src/spline/model_summaries.jl	/^function rangeT(y::BitArray{1})$/;"	f
ranges_counts	src/spline/plots.jl	/^function ranges_counts(df; binsize = 0.001, tmax = 50.)$/;"	f
relativetime	src/spline/mkdf.jl	/^function relativetime(cell::T, time, tmax, valid)  where T <: DataFrameRow $/;"	f
relativetime	src/spline/mkdf.jl	/^function relativetime(cellpair::DataFrame, time, tmax, valid)$/;"	f
relativetime	src/spline/mkdf.jl	/^function relativetime(lift, cover, grasp, t, tmax)$/;"	f
remove_nan	scripts/io/v1-v6.jl	/^function remove_nan(df)$/;"	f
remove_zerotrials	scripts/io/v1-v6.jl	/^function remove_zerotrials(df)$/;"	f
save_trials	scripts/io/save-trials.jl	/^function save_trials(trials)$/;"	f
savefig	src/savefig.jl	/^function savefig(fn::AbstractString, source::AbstractString)$/;"	f
scatter_dynamics	scripts/pca/pca.jl	/^function scatter_dynamics(around, title)$/;"	f
search_routes	scripts/io/load-full.jl	/^function search_routes(x, l, saved_list::Vector)$/;"	f
select_cells	scripts/spline/modular/plot-figure-4.jl	/^function select_cells(data, idx)$/;"	f
select_indexes	scripts/spline/modular/plot-figure-4.jl	/^function select_indexes(result_ll, sim_neigh, sim_all)$/;"	f
sem	scripts/crosscorr/c-d.jl	/^function sem(x::Matrix; dims=2)$/;"	f
sem	src/sem.jl	/^function sem(x::Matrix; dims=2)$/;"	f
seq	_research/old/ppseq.jl	/^const seq = PPSeq$/;"	c
sigmoid	_research/turing/pois-reg.jl	/^sigmoid(z::Real) = one(z) \/ (one(z) + exp(-z))$/;"	f
single_trials	_research/old/experimental.jl	/^function single_trials(df, landmark::String)$/;"	f
single_trials	_research/old/plot-gpfa.jl	/^function single_trials(df, landmark::String)$/;"	f
single_trials	scripts/io/save-trials.jl	/^function single_trials(df, landmark::String)$/;"	f
size	scripts/io/v1-v6.jl	/^@test size(new.t) == size(unique(new.t))$/;"	f
sort_active	scripts/pca/speed-pca.jl	/^function sort_active(n, thr=0.5)$/;"	f
sort_around	src/psth.jl	/^	sort_around::Real$/;"	g	struct:PSTH
standardize_landmarks	_research/old/experimental.jl	/^function standardize_landmarks(landmarks::Array{Array{Float64,1},1})::Array{Float64, 2}$/;"	f
sum	scripts/io/v1-v6.jl	/^@test sum([x for c in new.cover for x in c] .- [x for l in new.lift for x in l] .== 0) == 0$/;"	f
sum	scripts/io/v1-v6.jl	/^@test sum([x for c in new.grasp for x in c] .- [x for l in new.cover for x in l] .== 0) == 0$/;"	f
summary	scripts/spline/modular/plot-summary.jl	/^function summary(fits, sims, data, respath, tmax, n, fig_params, i1, i2)$/;"	f
visualise	src/psth.jl	/^function visualise(A::PSTH, x::Matrix)$/;"	f
visualize	scripts/spline/modular/plot-figure-4.jl	/^function visualize(cc, cc_c, cc_s, cc_params, idx)$/;"	f
write_args_and_configs	scripts/spline/common/preprocess.jl	/^function write_args_and_configs(df, p, index, path, binneddir="csv\/", argsdir="in\/r.config\/",/;"	f
write_args_and_configs	scripts/spline/likelihood/preprocess.jl	/^function write_args_and_configs(df, p, index, path, n; binneddir="csv\/", argsdir="in\/r.config\//;"	f
write_configs	scripts/spline/modular/preprocess.jl	/^function write_configs(reference, group, landmark, alpha, indexes, dirs)$/;"	f
